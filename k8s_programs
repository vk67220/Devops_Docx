---
apiVersion: v1
kind: Pod #Kind is written as Pod, because we are creating a POD here
metadata:
  name: javawebapppod #its a pod name
  labels: #to identify pods in the cluster, we will give labels. Label is an ID for the Pod
    app: javawebapp #pod label
spec: #here we will specify what we want to do with pod
  containers: #here we are creating a container
    - name: javawebappcontainer #container name
      image: kastrov/javaappkastro
      ports: #port mapping
        - containerPort: 8080 #any number can be given
---

---
apiVersion: v1
kind: Service
metadata: 
  name: javawebappsvc #Service name. Any name can be given
spec: # used to identify the lable of a pod
  type: NodePort
  selector: # it is used to identify the pod by using pod label
    app: javawebapp
  ports: 
  - port: 80 #serivce cluster host port
    targetPort: 8080 #container port
---

Manifest file (2 in 1): Pod and service manifests are in the same file
---
apiVersion: v1
kind: Pod
metadata: 
  name: javawebapppod
  labels:
    app: javawebapp
spec:
  containers:
    - name: javawebappcontainer
      image: kastrov/zomato
      ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata: 
  name: javawebappsvc
spec:
  type: NodePort
  selector: 
    app: javawebapp
  ports: 
    - port: 80
      targetPort: 3000
      nodePort: 31877 #any number can be given but it has to be b/w 30000 and 32767
---
