provider "aws"{
 alias = "us-east-2"
 region = "us-east-2"
}

provider "aws"{
  alias = "us-west-2"
  region = "us-west-2"
}
resource "aws_instance" "one"{
  ami = "ami-07f463d9d4a6f005f"
  instance_type = "t2.micro"
  count = 1
  key_name = "ohio.pem"
  provider = "aws.us-east-2"
  tags={
   Name = "abhishek verramalla"
}
}

resource "aws_instance" "two"{
 ami = "ami-000089c8d02060104"
 instance_type = "t2.micro"
 count = 2
 provider = "aws.us-west-2"
 tags={
   Name = "abhishek verramalla"
}
}




variable "instance_type" {
    description = "EC2 instance type"
    type = string
}
variable "ami_id" {
    description = "EC2 AMI id"
    type = string
}
variable "instance_count" {
    description = "EC2 instance count"
    type = number  
}
variable "environment" {
    description = "Deployment environment (dev, staging, prod)"
    type = string  
}
variable "key_name" {
    description = "EC2 key name"
    type = string
    default = "ohio.pem"
}



instance_type = "t2.small"
ami_id = "ami-07f463d9d4a6f005f"
environment = "dev"
instance_count = 2

instance_type = "t2.micro"
ami_id = "ami-07f463d9d4a6f005f"
instance_count = 1
environment = "staging"

instance_type = "t2.medium"
ami_id = "ami-07f463d9d4a6f005f"
instance_count = 1
environment = "prod"



provider "aws" {
    region = "us-east-2"
  
}
resource "aws_instance" "one" {
    ami = var.ami_id
    instance_type = var.instance_type
    count = var.instance_count
    key_name = var.key_name
  
 tags ={
    Name = "test_terraform_${var.environment}"
    environment = var.environment
  }
}
output "public_ip"{
    description = "Public ip of ec2 machines is"
    value = aws_instance.one[*].public_ip 
}



terraform plan -var-file=dev.tfvars
terraform plan -var-file=staging.tfvars
terraform plan -var-file=prod.tfvars

terraform apply --auto-approve -var-file=staging.tfvars
terraform apply --auto-approve -var-file=dev.tfvars
terraform apply --auto-approve -var-file=prod.tfvars




